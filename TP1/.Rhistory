install.packages("miic")
library(miic)
?miic
data(hematoData)
# 'mtcars' dataset
# ----
library(ggraph)
library(igraph)
library(Hmisc)
# See mtcars (we will consider only the first 7 columns)
?mtcars; head(mtcars)
# Compute the pairwise correlation coefficients
# and their significativity
# --
my_mtcars <- scale(mtcars[, 1:7])
head(my_mtcars)
res_corr <- rcorr(my_mtcars, type="pearson")
res_corr
# We get 2 matrices
# $r : pearson correlation or spearman rho
# $P: correlation p-values
graph_corrs <- graph_from_adjacency_matrix(res_corr$r,
diag = FALSE,
weight = TRUE,
mode = "undirected")
plot(graph_corrs, layout=layout_with_dh)
res_corr <- rcorr(hematoData, type="pearson")
hematoData
dim(hematoData)
typeof(hematoData)
typeof(my_mtcars)
data <- as.double(hematoData)
unlist(hematoData)
dim(unlist(hematoData))
as.matrix(hematoData)
typeof(as.matrix(hematoData))
data <- as.matrix(hematoData)
data
res_corr <- rcorr(data, type="pearson")
res_corr
med(res_corr)
median(res_corr)
median(res_corr$r)
# We get 2 matrices
# $r : pearson correlation or spearman rho
# $P: correlation p-values
graph_corrs <- graph_from_adjacency_matrix(res_corr$r,
diag = FALSE,
weight = TRUE,
mode = "undirected")
plot(graph_corrs, layout=layout_with_dh)
res_corr
thresh = 0.6
res_corr_filter_corr <- res_corr$r
res_corr_filter_corr[abs(res_corr$r) < thresh] <- 0
graph_corrs_filter_corr <- graph_from_adjacency_matrix(res_corr_filter_corr, diag = FALSE, weight = TRUE, mode = "undirected")
# Use correlation for edge width and colors
plot(graph_corrs_filter_corr, layout=layout_with_dh,
edge.width = abs(E(graph_corrs_filter_corr)$weight),
edge.color = ifelse(E(graph_corrs_filter_corr)$weight > 0,
"blue","red"))
plot(graph_corrs_filter_corr, layout=layout_with_dh)
thresh = 0.3
res_corr_filter_corr <- res_corr$r
res_corr_filter_corr[abs(res_corr$r) < thresh] <- 0
graph_corrs_filter_corr <- graph_from_adjacency_matrix(res_corr_filter_corr, diag = FALSE, weight = TRUE, mode = "undirected")
plot(graph_corrs_filter_corr, layout=layout_with_dh)
thresh = 0.1
res_corr_filter_corr <- res_corr$r
res_corr_filter_corr[abs(res_corr$r) < thresh] <- 0
graph_corrs_filter_corr <- graph_from_adjacency_matrix(res_corr_filter_corr, diag = FALSE, weight = TRUE, mode = "undirected")
plot(graph_corrs_filter_corr, layout=layout_with_dh)
thresh = median(res_corr$r)
res_corr_filter_corr <- res_corr$r
res_corr_filter_corr[abs(res_corr$r) < thresh] <- 0
graph_corrs_filter_corr <- graph_from_adjacency_matrix(res_corr_filter_corr, diag = FALSE, weight = TRUE, mode = "undirected")
plot(graph_corrs_filter_corr, layout=layout_with_dh)
median(res_corr$r)
thresh = 0.05
res_corr_filter_corr <- res_corr$r
res_corr_filter_corr[abs(res_corr$r) < thresh] <- 0
graph_corrs_filter_corr <- graph_from_adjacency_matrix(res_corr_filter_corr, diag = FALSE, weight = TRUE, mode = "undirected")
plot(graph_corrs_filter_corr, layout=layout_with_dh)
thresh = 0.04
res_corr_filter_corr <- res_corr$r
res_corr_filter_corr[abs(res_corr$r) < thresh] <- 0
graph_corrs_filter_corr <- graph_from_adjacency_matrix(res_corr_filter_corr, diag = FALSE, weight = TRUE, mode = "undirected")
plot(graph_corrs_filter_corr, layout=layout_with_dh)
# Use correlation for edge width and colors
plot(graph_corrs_filter_corr, layout=layout_with_dh,
edge.width = abs(E(graph_corrs_filter_corr)$weight),
edge.color = ifelse(E(graph_corrs_filter_corr)$weight > 0,
"blue","red"))
plot(graph_corrs_filter_corr, layout=layout_with_dh)
?miic
miic(data)
miic(as.data.frame(data))
