E(graph)$color <- ifelse(E(graph)$weight > 0, "blue","red")
E(graph)$width <- abs(E(graph)$weight) * 3
#deg <- degree(graph, mode = "all")
#V(graph)$size <- deg/std(deg)*20
# Layout
#my_layout <- layout_with_dh
#my_layout <- layout_with_gem
#my_layout <- layout_with_graphopt
my_layout <- layout_with_lgl
# Plot
plot(graph, layout=my_layout, edge.arrow.size=0.25)
}
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order > to_keep] <- 0
plot_graph(res_corr_filter)
sum(res_corr_filter < 0)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
sum(res_corr_filter != 0)
#################################################
# Functions
#################################################
plot_graph <- function(adjacency_matrix){
# Make graph
graph <- graph_from_adjacency_matrix(adjacency_matrix, diag = FALSE, weight = TRUE, mode = "undirected")
# Parametrize
V(graph)$color <- ifelse(attr(V(graph), "names") %in% hematopoietic, "red",
ifelse(attr(V(graph), "names") %in% endothelial , "violet",
ifelse(attr(V(graph), "names") %in% unclassified , "gray", "deepskyblue")))
E(graph)$color <- ifelse(E(graph)$weight > 0, "blue","red")
E(graph)$width <- abs(E(graph)$weight) * 3
#deg <- degree(graph, mode = "all")
#V(graph)$size <- deg/std(deg)*20
# Layout
#my_layout <- layout_with_dh
#my_layout <- layout_with_gem
#my_layout <- layout_with_graphopt
my_layout <- layout_with_lgl
# Plot
plot(graph, layout=my_layout, edge.arrow.size=0.25)
}
res_corr_filter <- res_corr$r
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
res_corr_filter
res_corr_filter[1,]
rank(res_corr_filter[1,])
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
my_order
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 3
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep & res_corr_filter > 0] <- 0
sum(res_corr_filter < 0)
plot_graph(res_corr_filter)
sum(res_corr_filter > 0)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 3
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep)] <- 0
sum(res_corr_filter > 0)
res_corr$n
res_corr$P
res_corr_filter <- res_corr$r
sum(res_corr_filter != 0)
# Filter edges according the p-value
res_corr_filter[res_corr$P > 0.05] <- 0
sum(res_corr_filter != 0)
# Filter edges according the p-value
res_corr_filter[res_corr$P > 0.05] <- 0
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep)] <- 0
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
res_corr_filter[res_corr$P > 0.05]
mean(res_corr_filter[res_corr$P > 0.05])
mean(res_corr_filter[res_corr$P > 0.05], na.rm = TRUE)
mean(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep)] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order > to_keep & res_corr_filter > 0] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
#res_corr_filter[my_order > to_keep & res_corr_filter > 0] <- 0
to_keep <- 3
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order > to_keep & res_corr_filter > 0] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 3
res_corr_filter[my_order > to_keep & res_corr_filter > 0] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep_pos <- 5
to_keep_neg <- 3
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep_pos) & my_order > to_keep_neg & res_corr_filter > 0] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep_neg <- 3
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep & res_corr_filter > 0] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep_neg <- 3
#res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep & res_corr_filter > 0] <- 0
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & (my_order > to_keep | res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep_neg <- 3
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep | (my_order < to_keep & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 3
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep+2 | (my_order < to_keep+2 & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep | (my_order < to_keep & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 4
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep | (my_order < to_keep & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep-1 | (my_order < to_keep-1 & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
min(res_corr_filter)
min(abs(res_corr_filter))
min(res_corr_filter[res_corr_filter > 0])
res_corr_filter <- res_corr$r
# Filter edges with a threshold
thresh = 0.04
res_corr_filter[abs(res_corr$r) < thresh] <- 0
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep-1 | (my_order < to_keep-1 & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges with a threshold
thresh = 0.04
res_corr_filter[abs(res_corr$r) < thresh] <- 0
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep-1 | (my_order < to_keep-1 & res_corr_filter > 0)] <- 0
min(res_corr_filter[res_corr_filter > 0])
res_corr_filter <- res_corr$r
# Filter edges with a threshold
thresh = 0.05
res_corr_filter[abs(res_corr$r) < thresh] <- 0
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep | (my_order < to_keep & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges with a threshold
thresh = 0.05
res_corr_filter[abs(res_corr$r) < thresh] <- 0
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep-1 | (my_order < to_keep-1 & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges with a threshold
thresh = 0.043
res_corr_filter[abs(res_corr$r) < thresh] <- 0
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep | (my_order < to_keep & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges with a threshold
thresh = 0.043
res_corr_filter[abs(res_corr$r) < thresh] <- 0
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep-1 | (my_order < to_keep-1 & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges with a threshold
thresh = 0.043
res_corr_filter[abs(res_corr$r) < thresh] <- 0
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 4
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep | (my_order < to_keep & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 4
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep-1 | (my_order < to_keep-1 & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges with a threshold
thresh = 0.04
res_corr_filter[abs(res_corr$r) < thresh] <- 0
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep-1 | (my_order < to_keep-1 & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges with a threshold
thresh = 0.04
res_corr_filter[abs(res_corr$r) < thresh] <- 0
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 4
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep-1 | (my_order < to_keep-1 & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
res_corr_filter <- res_corr$r
# Filter edges with a threshold
thresh = 0.04
res_corr_filter[abs(res_corr$r) < thresh] <- 0
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep-1 | (my_order < to_keep-2 & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(miic)
library(ggraph)
library(igraph)
library(Hmisc)
data(hematoData)
data <- scale(as.matrix(hematoData))
hematopoietic <- c("Runx1", "Ikaros", "Myb", "Cbfa2t3h", "Gata1", "Mitf", "Nfe2", "Gfi1b", "Sfpi1", "Gfi1")
endothelial <- c("Erg", "Sox17", "Notch1", "Tbx3", "Tbx20", "Sox7", "HoxB4")
unclassified <- c("HoxB2", "HoxD8")
res_corr <- rcorr(data, type="pearson")
#################################################
# Functions
#################################################
plot_graph <- function(adjacency_matrix){
# Make graph
graph <- graph_from_adjacency_matrix(adjacency_matrix, diag = FALSE, weight = TRUE, mode = "undirected")
# Parametrize
V(graph)$color <- ifelse(attr(V(graph), "names") %in% hematopoietic, "red",
ifelse(attr(V(graph), "names") %in% endothelial , "violet",
ifelse(attr(V(graph), "names") %in% unclassified , "gray", "deepskyblue")))
E(graph)$color <- ifelse(E(graph)$weight > 0, "blue","red")
E(graph)$width <- abs(E(graph)$weight) * 3
#deg <- degree(graph, mode = "all")
#V(graph)$size <- deg/std(deg)*20
# Layout
#my_layout <- layout_with_dh
#my_layout <- layout_with_gem
#my_layout <- layout_with_graphopt
my_layout <- layout_with_lgl
# Plot
plot(graph, layout=my_layout, edge.arrow.size=0.25)
}
res_corr_filter <- res_corr$r
# Filter edges with a threshold
thresh = 0.04
res_corr_filter[abs(res_corr$r) < thresh] <- 0
# Filter edges by keeping highest values
my_order <- t(apply(res_corr_filter, MARGIN=1, FUN=rank))
to_keep <- 5
res_corr_filter[my_order < (ncol(res_corr_filter) - to_keep) & my_order > to_keep-1 | (my_order < to_keep-1 & res_corr_filter > 0)] <- 0
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
plot_graph(res_corr_filter)
sum(res_corr$r == 0)
?hematoData
